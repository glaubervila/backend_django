Install Ionic
https://ionicframework.com/getting-started/

- Instal Nodejs NVM (Node Version Manager)  Ou Apenas baixar o Node e colocar em /usr/local (https://hub.docker.com/r/agileek/ionic-framework/~/dockerfile/)

https://www.digitalocean.com/community/tutorials/como-instalar-o-node-js-no-ubuntu-16-04-pt

sudo apt-get install build-essential libssl-dev

curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh -o install_nvm.sh

bash install_nvm.sh

source ~/.profile

Listar as versoes disponiveis 
nvm ls-remote

Instalar a versao mais recente no momento 
nvm install 8.3.0

Escolher a versao que vai usar
nvm use 8.3.0

node -v

- Instalar IONIC CLI / Cordova
$ npm install -g cordova ionic

Testar o Ionic
$ ionic start myApp tabs
$ cd myApp
$ ionic serve


- Ambiente Cordova Android
https://cordova.apache.org/docs/en/7.x/guide/platforms/android/

--- Java JDK 8
Unistall Openjdk ( rodar esse como root ) https://community.linuxmint.com/tutorial/view/1372
$ sudo apt-get update && apt-get remove openjdk*

(https://www.digitalocean.com/community/tutorials/como-instalar-o-java-com-apt-get-no-ubuntu-16-04-pt)
$ sudo add-apt-repository ppa:webupd8team/java
$ sudo apt-get update

Adicionar Essas Respostas ao debconf para que a instalacao do pacote JDK8 possa ser Silent. (https://askubuntu.com/questions/190582/installing-java-automatically-with-silent-option) Outra Forma de instalar com Silent https://hub.docker.com/r/agileek/ionic-framework/~/dockerfile/
$ echo debconf shared/accepted-oracle-license-v1-1 select true | \
  sudo debconf-set-selections

$ echo debconf shared/accepted-oracle-license-v1-1 seen true | \
  sudo debconf-set-selections

$ sudo apt-get install oracle-java8-installer

Setar o java como default
$ sudo apt-get install oracle-java8-set-default

Para Testar abra outro terminal
$ java -version

Descobrir o Path onde o Java esta instalado
$ sudo update-alternatives --config java

Setar a variavel de ambiente JAVA_HOME ( No meu nao teve permissao com sudo tive que logar como root )
$ echo JAVA_HOME="/usr/lib/jvm/java-8-oracle" >> /etc/environment


--- Android SDK (https://cordova.apache.org/docs/en/7.x/guide/platforms/android/#installing-the-requirements)
Baixar o Android studio
Descompactar no /opt/android-studio
Criar o diretorio para o SDK
$ mkdir /opt/android-sdk

Instalei pela interface rodando 
$ cd /opt/android-studio/bin/
$ ./studio.sh

Escolhi a opcao custom, alterei o path do sdk para /opt/android-sdk

Criar as variaveis de Ambiente
$ echo ANDROID_HOME="/opt/android-sdk" >> /etc/environment

Adicionar a variavel $PATH esses 2 caminhos 
export PATH=${PATH}:/opt/android-sdk/platform-tools:/opt/android-sdk/tools

Nesse ponto o Ambiente esta pronto 
para testar entrei no diretorio do app criado pelo Ionic
$ cd myapp

Rodar esse comando para fazer o build no Aparelho
$ ionic cordova run android --device

Deu erro por nao encontrar o Gradle, mais o mesmo já estava instalado no diretorio do /opt/android-studio
2 possiveis correções instalar o gradle ou adicionar o path dele a variavel de Ambiente /env/enviroment PATH

Adicionei Manualmente o Path para o gradle 
A varivale PATH dentro de /etc/enviroment ficou assim
PATH="<O_que_ja_tinha_antes>:/opt/android-sdk/platform-tools:/opt/android-sdk/tools:/opt/android-sdk/tools/bin:/opt/android-studio/gradle/gradle-3.2/bin"

Depois tive erro de "You have not accepted the license agreements of the following SDK component"

Resolvi Abrindo a interface SDK Manage e adicionei o pacote 
Google Play Licensing Library

Essa etapa em linha de comando retiradao de uma imagem docker (https://hub.docker.com/r/agileek/ionic-framework/~/dockerfile/) Mais acho que para rodar esses comandos é necesario instalar o sdk pela linha de comando tb. por que não achei o android-accept-licenses.sh

"/opt/tools/android-accept-licenses.sh", "android update sdk --all --no-ui --filter platform-tools,tools,build-tools-23.0.2,android-23,extra-android-support,extra-android-m2repository,extra-google-m2repository"

depois tentei fazer o teste no aparelho novamente com o comando 
$ ionic cordova run android --device

dessa vez com sucesso

Para personalizar o Thema no Ionic é necessário o Sass
$ sudo apt-get install gem ruby ruby-dev
$ sudo gem install sass compass



